basePath: /
definitions:
  models.Boy:
    properties:
      age:
        example: 25
        type: integer
      bio:
        example: I love traveling and meeting new people
        type: string
      first_name:
        example: John
        type: string
      id:
        example: 1
        type: integer
      last_name:
        example: Doe
        type: string
      profile_picture_url:
        example: https://example.com/profile.jpg
        type: string
      user_id:
        example: 1
        type: integer
    required:
    - age
    - first_name
    - last_name
    - user_id
    type: object
  models.Girl:
    properties:
      age:
        example: 23
        type: integer
      bio:
        example: I enjoy meeting new people
        type: string
      daily_rate:
        example: 100
        type: integer
      first_name:
        example: Jane
        type: string
      id:
        example: 1
        type: integer
      last_name:
        example: Doe
        type: string
      profile_picture_url:
        example: https://example.com/profile.jpg
        type: string
      user_id:
        example: 1
        type: integer
    required:
    - age
    - daily_rate
    - first_name
    - last_name
    - user_id
    type: object
  models.LoginRequest:
    properties:
      email:
        example: john@example.com
        type: string
      password:
        example: password123
        type: string
    type: object
  models.User:
    properties:
      email:
        example: john@example.com
        type: string
      id:
        example: 1
        type: integer
      password:
        example: password123
        type: string
      role:
        example: boy
        type: string
      username:
        example: johndoe
        type: string
    required:
    - email
    - password
    - role
    - username
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a girlfriend rental service API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Rent A Girlfriend API
  version: "1.0"
paths:
  /users/login:
    post:
      consumes:
      - application/json
      description: Authenticates a user and returns a JWT token
      parameters:
      - description: Login Credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              allOf:
              - type: string
              - properties:
                  token:
                    type: string
                type: object
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login user
      tags:
      - user
  /users/profile/boy:
    post:
      consumes:
      - application/json
      description: Creates a profile for a boy user
      parameters:
      - description: Boy Profile Information
        in: body
        name: profile
        required: true
        schema:
          $ref: '#/definitions/models.Boy'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Boy'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Create boy profile
      tags:
      - profile
  /users/profile/girl:
    post:
      consumes:
      - application/json
      description: Creates a profile for a girl user
      parameters:
      - description: Girl Profile Information
        in: body
        name: profile
        required: true
        schema:
          $ref: '#/definitions/models.Girl'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Girl'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Create girl profile
      tags:
      - profile
  /users/register:
    post:
      consumes:
      - application/json
      description: Registers a new user with username, email, password and role
      parameters:
      - description: User Registration Information
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new user
      tags:
      - user
schemes:
- http
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
